defmodule GuildResponse do
  @moduledoc """
  Provides struct and type for a GuildResponse
  """

  @type t :: %__MODULE__{
          afk_channel_id: String.t() | nil,
          afk_timeout: integer,
          application_id: String.t() | nil,
          banner: String.t() | nil,
          default_message_notifications: integer,
          description: String.t() | nil,
          discovery_splash: String.t() | nil,
          emojis: [EmojiResponse.t()],
          explicit_content_filter: integer,
          features: [String.t()],
          home_header: String.t() | nil,
          icon: String.t() | nil,
          id: String.t(),
          max_members: integer | nil,
          max_presences: integer | nil,
          max_stage_video_channel_users: integer | nil,
          max_video_channel_users: integer | nil,
          mfa_level: integer,
          name: String.t(),
          nsfw: boolean,
          nsfw_level: integer,
          owner_id: String.t(),
          preferred_locale: String.t(),
          premium_progress_bar_enabled: boolean,
          premium_subscription_count: integer,
          premium_tier: integer,
          public_updates_channel_id: String.t() | nil,
          region: String.t(),
          roles: [GuildRoleResponse.t()],
          rules_channel_id: String.t() | nil,
          safety_alerts_channel_id: String.t() | nil,
          splash: String.t() | nil,
          stickers: [GuildStickerResponse.t()],
          system_channel_flags: integer,
          system_channel_id: String.t() | nil,
          vanity_url_code: String.t() | nil,
          verification_level: integer,
          widget_channel_id: String.t() | nil,
          widget_enabled: boolean
        }

  defstruct [
    :afk_channel_id,
    :afk_timeout,
    :application_id,
    :banner,
    :default_message_notifications,
    :description,
    :discovery_splash,
    :emojis,
    :explicit_content_filter,
    :features,
    :home_header,
    :icon,
    :id,
    :max_members,
    :max_presences,
    :max_stage_video_channel_users,
    :max_video_channel_users,
    :mfa_level,
    :name,
    :nsfw,
    :nsfw_level,
    :owner_id,
    :preferred_locale,
    :premium_progress_bar_enabled,
    :premium_subscription_count,
    :premium_tier,
    :public_updates_channel_id,
    :region,
    :roles,
    :rules_channel_id,
    :safety_alerts_channel_id,
    :splash,
    :stickers,
    :system_channel_flags,
    :system_channel_id,
    :vanity_url_code,
    :verification_level,
    :widget_channel_id,
    :widget_enabled
  ]

  @doc false
  @spec __fields__(atom) :: keyword
  def __fields__(type \\ :t)

  def __fields__(:t) do
    [
      afk_channel_id: {:union, [{:string, :generic}, :null]},
      afk_timeout: :integer,
      application_id: {:union, [{:string, :generic}, :null]},
      banner: {:union, [{:string, :generic}, :null]},
      default_message_notifications: :integer,
      description: {:union, [{:string, :generic}, :null]},
      discovery_splash: {:union, [{:string, :generic}, :null]},
      emojis: [{EmojiResponse, :t}],
      explicit_content_filter: :integer,
      features: [string: :generic],
      home_header: {:union, [{:string, :generic}, :null]},
      icon: {:union, [{:string, :generic}, :null]},
      id: {:string, :generic},
      max_members: {:union, [:integer, :null]},
      max_presences: {:union, [:integer, :null]},
      max_stage_video_channel_users: {:union, [:integer, :null]},
      max_video_channel_users: {:union, [:integer, :null]},
      mfa_level: :integer,
      name: {:string, :generic},
      nsfw: :boolean,
      nsfw_level: :integer,
      owner_id: {:string, :generic},
      preferred_locale: {:string, :generic},
      premium_progress_bar_enabled: :boolean,
      premium_subscription_count: :integer,
      premium_tier: :integer,
      public_updates_channel_id: {:union, [{:string, :generic}, :null]},
      region: {:string, :generic},
      roles: [{GuildRoleResponse, :t}],
      rules_channel_id: {:union, [{:string, :generic}, :null]},
      safety_alerts_channel_id: {:union, [{:string, :generic}, :null]},
      splash: {:union, [{:string, :generic}, :null]},
      stickers: [{GuildStickerResponse, :t}],
      system_channel_flags: :integer,
      system_channel_id: {:union, [{:string, :generic}, :null]},
      vanity_url_code: {:union, [{:string, :generic}, :null]},
      verification_level: :integer,
      widget_channel_id: {:union, [{:string, :generic}, :null]},
      widget_enabled: :boolean
    ]
  end
end
