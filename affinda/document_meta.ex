defmodule DocumentMeta do
  @moduledoc """
  Provides struct and type for a DocumentMeta
  """

  @type t :: %__MODULE__{
          archivedDt: DateTime.t() | nil,
          childDocuments: [DocumentMetaChildDocuments.t()] | nil,
          collection: DocumentMetaCollection.t() | nil,
          confirmedBy: UserNullable.t() | nil,
          confirmedDt: DateTime.t() | nil,
          createdBy: User.t() | nil,
          createdDt: DateTime.t() | nil,
          customIdentifier: String.t() | nil,
          errorCode: String.t() | nil,
          errorDetail: String.t() | nil,
          expiryTime: DateTime.t() | nil,
          failed: boolean | nil,
          file: String.t() | nil,
          fileName: String.t() | nil,
          identifier: String.t(),
          isArchived: boolean | nil,
          isConfirmed: boolean | nil,
          isOcrd: boolean | nil,
          isRejected: boolean | nil,
          language: String.t() | nil,
          ocrConfidence: number | nil,
          pages: [PageMeta.t()],
          parentDocument: DocumentMetaParentDocument.t() | nil,
          pdf: String.t() | nil,
          ready: boolean | nil,
          readyDt: DateTime.t() | nil,
          regionBias: RegionBias.t() | nil,
          rejectedBy: UserNullable.t() | nil,
          rejectedDt: DateTime.t() | nil,
          reviewUrl: String.t() | nil,
          skipParse: boolean | nil,
          sourceEmail: String.t() | nil,
          sourceEmailAddress: String.t() | nil,
          tags: [Tag.t()] | nil,
          workspace: DocumentMetaWorkspace.t()
        }

  defstruct [
    :archivedDt,
    :childDocuments,
    :collection,
    :confirmedBy,
    :confirmedDt,
    :createdBy,
    :createdDt,
    :customIdentifier,
    :errorCode,
    :errorDetail,
    :expiryTime,
    :failed,
    :file,
    :fileName,
    :identifier,
    :isArchived,
    :isConfirmed,
    :isOcrd,
    :isRejected,
    :language,
    :ocrConfidence,
    :pages,
    :parentDocument,
    :pdf,
    :ready,
    :readyDt,
    :regionBias,
    :rejectedBy,
    :rejectedDt,
    :reviewUrl,
    :skipParse,
    :sourceEmail,
    :sourceEmailAddress,
    :tags,
    :workspace
  ]

  @doc false
  @spec __fields__(atom) :: keyword
  def __fields__(type \\ :t)

  def __fields__(:t) do
    [
      archivedDt: {:string, :date_time},
      childDocuments: [{DocumentMetaChildDocuments, :t}],
      collection: {DocumentMetaCollection, :t},
      confirmedBy: {UserNullable, :t},
      confirmedDt: {:string, :date_time},
      createdBy: {User, :t},
      createdDt: {:string, :date_time},
      customIdentifier: {:string, :generic},
      errorCode: {:string, :generic},
      errorDetail: {:string, :generic},
      expiryTime: {:string, :date_time},
      failed: :boolean,
      file: {:string, :generic},
      fileName: {:string, :generic},
      identifier: {:string, :generic},
      isArchived: :boolean,
      isConfirmed: :boolean,
      isOcrd: :boolean,
      isRejected: :boolean,
      language: {:string, :generic},
      ocrConfidence: :number,
      pages: [{PageMeta, :t}],
      parentDocument: {DocumentMetaParentDocument, :t},
      pdf: {:string, :generic},
      ready: :boolean,
      readyDt: {:string, :date_time},
      regionBias: {RegionBias, :t},
      rejectedBy: {UserNullable, :t},
      rejectedDt: {:string, :date_time},
      reviewUrl: {:string, :generic},
      skipParse: :boolean,
      sourceEmail: {:string, :generic},
      sourceEmailAddress: {:string, :generic},
      tags: [{Tag, :t}],
      workspace: {DocumentMetaWorkspace, :t}
    ]
  end
end
